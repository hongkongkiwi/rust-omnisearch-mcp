searchState.loadedDescShard("omnisearch_mcp", 0, "Omnisearch MCP\nA high-level client for performing omnisearch operations.\nA request for performing a search.\nThe response from a search operation.\nThe current version of the omnisearch-mcp crate\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nHigh-level client API for using omnisearch as a library.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nMacro to create a simple provider with basic HTTP client\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nMacro to handle common HTTP error responses\nInitialize the omnisearch system with available providers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nThe names of providers that were used to generate these …\nThe original search query.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nThe search results.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nA high-level client for performing omnisearch operations.\nA request for performing a search.\nThe response from a search operation.\nGet the names of all available providers.\nExclude results from the specified domains.\nCheck if a specific provider is available.\nInclude only results from the specified domains.\nConvert this request into BaseSearchParams for use with …\nCheck if the response is empty.\nGet the number of results.\nSet the maximum number of results to return.\nPerform a search across multiple providers and combine …\nCreate a new omnisearch client.\nCreate a new search request with the given query.\nPrefer a specific search provider.\nGet information about a specific provider.\nThe names of providers that were used to generate these …\nThe original search query.\nThe search results.\nGet results from a specific provider.\nPerform a search using the specified request parameters.\nCommon HTTP utilities for providers\nCommon macros for providers\nBase provider functionality that can be shared across all …\nProvider factory for creating and managing providers\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nCreate a HTTP client with timeout\nHandle common HTTP error responses\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nA trait for providers that need API key validation\nA trait for providers that need multiple credential …\nCommon utility functions for providers\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nCreate a site filter from domains\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nConvert a vector of strings to a comma-separated string\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nCreate a standardized provider error\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nProvider factory for creating and managing providers\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nCreate all available search providers based on …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nGet provider names for logging\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].")