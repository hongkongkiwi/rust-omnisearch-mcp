version: "3.8"

services:
  omnisearch-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "9090:9090" # Prometheus metrics
    environment:
      - RUST_LOG=info
      - OMNISEARCH_SERVER__HOST=0.0.0.0
      - OMNISEARCH_SERVER__PORT=3000
      - OMNISEARCH_CACHE__ENABLED=true
      - OMNISEARCH_CACHE__TYPE=redis
      - OMNISEARCH_CACHE__REDIS__URL=redis://redis:6379
      - OMNISEARCH_METRICS__ENABLED=true
      - OMNISEARCH_METRICS__PROMETHEUS_PORT=9090
      # Add your API keys here or use .env file
      # - TAVILY_API_KEY=${TAVILY_API_KEY}
      # - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - omnisearch-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - omnisearch-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    networks:
      - omnisearch-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - omnisearch-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  omnisearch-network:
    driver: bridge
